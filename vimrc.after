"Find the currently selected file in the NERDTree window
map <leader>f :NERDTreeFind<cr>

"Clear off white space from the end of the current line
map <leader>w :s/\s\+$//<cr>

"Clear off white space from the end of all lines
map <leader>W :%s/\s\+$//<cr>

"Deselect text by pressing enter after search
nnoremap <leader>d :noh<CR>

" Smart way to move between windows. Ctrl-[h,j,k,l]
nmap <C-j> <C-W>j
nmap <C-k> <C-W>k
nmap <C-h> <C-W>h
nmap <C-l> <C-W>l

"Make Command-P not send a f@#$ing print job (Not sure this is working though - Javid)
map <D-p> :CtrlP<CR>
imap <D-p> <ESC>:CtrlP<CR>

" http://unix.stackexchange.com/questions/117323/how-do-i-only-undo-pasted-text-in-vim
" Any text fragment pasted in insert mode should be undone separately, without
" destroying what was typed before.
inoremap <C-R> <C-G>u<C-R>

color railscasts2

set undodir=~/.janus/undodir
set undofile
set undolevels=1000 "maximum number of changes that can be undone
set undoreload=10000 "maximum number lines to save for undo on a buffer reload

command! -nargs=1 -range TabFirst exec <line1> . ',' . <line2> . 'Tabularize /^[^' . escape(<q-args>, '\^$.[?*~') . ']*\zs' . escape(<q-args>, '\^$.[?*~')

" Turn off Attention message for swap files
set shortmess+=A

" Increment a block of selected numbers
"  source: http://vim.wikia.com/wiki/Making_a_list_of_numbers
function! Incr()
  let a = line('.') - line("'<")
  let c = virtcol("'<")
  if a > 0
    execute 'normal! '.c.'|'.a."\<C-a>"
  endif
  normal `<
endfunction
vnoremap <C-a> :call Incr()<CR>

" select pasted text
" http://vim.wikia.com/wiki/Selecting_your_pasted_text
nnoremap gp `[v`]

" Setup Syntastic with eslint for Javascript lint
" http://remarkablemark.org/blog/2016/09/28/vim-syntastic-eslint/
" let g:syntastic_javascript_checkers=['eslint']

" Ale - lint / formatting tool
let g:ale_fixers = { 'javascript' : [ 'eslint' ] }
map <leader>x :ALEFix<cr>
